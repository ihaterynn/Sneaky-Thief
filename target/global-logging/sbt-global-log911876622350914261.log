[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\User\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 1.8.0_401)
[debug] Load.defaultLoad until apply took 139.032ms
[debug]           Load.loadUnit: plugins took 119.0224ms
[debug]           Load.loadUnit: defsScala took 0.4262ms
[debug] [Loading] Scanning directory C:\Users\User\IdeaProjects\finalproject-Sneaky Thief\project
[debug]             Load.loadUnit: mkEval took 13.6685ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\User\IdeaProjects\finalproject-Sneaky Thief\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.6901 ms
[info] loading settings for project finalproject-sneaky-thief-build from idea.sbt ...
[debug]               Load.resolveProject(finalproject-sneaky-thief-build) took 81.6475ms
[debug]             Load.loadTransitive: finalizeProject(Project(id finalproject-sneaky-thief-build, base: C:\Users\User\IdeaProjects\finalproject-Sneaky Thief\project, plugins: List(<none>))) took 116.4435ms
[debug] [Loading] Done in C:\Users\User\IdeaProjects\finalproject-Sneaky Thief\project, returning: (finalproject-sneaky-thief-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2937.896ms
[debug]           Load.loadUnit: cleanEvalClasses took 22.9937ms
[debug]         Load.loadUnit(file:/C:/Users/User/IdeaProjects/finalproject-Sneaky%20Thief/project/, ...) took 3088.2991ms
[debug]       Load.apply: load took 3240.5838ms
[debug]       Load.apply: resolveProjects took 5.0198ms
[debug]       Load.apply: finalTransforms took 51.4014ms
[debug]       Load.apply: config.delegates took 8.1084ms
[debug]       Load.apply: Def.make(settings)... took 421.5281ms
[debug]       Load.apply: structureIndex took 94.4234ms
[debug]       Load.apply: mkStreams took 2.1919ms
[info] loading project definition from C:\Users\User\IdeaProjects\finalproject-Sneaky Thief\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 6192.9788ms
[debug]     Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\User\IdeaProjects\finalproject-Sneaky Thief
[debug]       Load.loadUnit: mkEval took 0.292ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0798 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 46.8998ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\User\IdeaProjects\finalproject-Sneaky Thief, plugins: List(<none>))) took 50.6516ms
[debug] [Loading] Done in C:\Users\User\IdeaProjects\finalproject-Sneaky Thief, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1540.9683ms
[debug]     Load.loadUnit: cleanEvalClasses took 19.8213ms
[debug]   Load.loadUnit(file:/C:/Users/User/IdeaProjects/finalproject-Sneaky%20Thief/, ...) took 7756.7937ms
[debug] Load.apply: load took 7919.0522ms
[debug] Load.apply: resolveProjects took 0.4525ms
[debug] Load.apply: finalTransforms took 46.3035ms
[debug] Load.apply: config.delegates took 0.3841ms
[debug] Load.apply: Def.make(settings)... took 115.728ms
[debug] Load.apply: structureIndex took 45.5992ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to Project_21074653 (in build file:/C:/Users/User/IdeaProjects/finalproject-Sneaky%20Thief/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54991 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54991, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by no settings or tasks.
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by no settings or tasks.
[info] Reapplying settings...
[info] set current project to Project_21074653 (in build file:/C:/Users/User/IdeaProjects/finalproject-Sneaky%20Thief/)
[debug] > Exec(idea-shell, None, None)
